Given a string, find the length of the longest substring T that contains at most 2 distinct characters.

For example, Given s = “eceba”,

T is "ece" which its length is 3.

https://leetcode.com/discuss/questions/oj/longest-substring-with-at-most-two-distinct-characters

public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        int ret = 0;
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        int left = 0;
        int right = 0;
        while (right < s.length()) {
            char c = s.charAt(right);
            if (map.size() >=2 && !map.containsKey(c)) {
                ret = Math.max(ret, right - left);
                int leftmost = s.length();
                for (int i : map.values()) {
                    leftmost = Math.min(leftmost, i);
                }
                map.remove(s.charAt(leftmost));
                left = leftmost + 1;
            }
            map.put(c, right);
            right++;
        }
        ret = Math.max(ret, right - left);
        return ret;
    }
}
