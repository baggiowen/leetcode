An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:

a) it                      --> it    (no abbreviation)

     1
b) d|o|g                   --> d1g

              1    1  1
     1---5----0----5--8
c) i|nternationalizatio|n  --> i18n

              1
     1---5----0
d) l|ocalizatio|n          --> l10n
Assume you have a dictionary and given a word, find whether its abbreviation is unique in the dictionary. A word's abbreviation is unique if no other word from the dictionary has the same abbreviation.

Example: 
Given dictionary = [ "deer", "door", "cake", "card" ]

isUnique("dear") -> false
isUnique("cart") -> true
isUnique("cane") -> false
isUnique("make") -> true

https://leetcode.com/discuss/questions/oj/unique-word-abbreviation

public class ValidWordAbbr {
    
    Map<String, String> abbrMap = new HashMap<String, String>();

    public ValidWordAbbr(String[] dictionary) {
        for(String str : dictionary) {
            String abbr = toAbbr(str);
            if (!abbrMap.containsKey(abbr)) {
                abbrMap.put(abbr, str);
            }
            else {
                if (!abbrMap.get(abbr).equals(str)) {
                    abbrMap.put(abbr, "");
                }
            }
        }
    }

    public boolean isUnique(String word) {
        return !abbrMap.containsKey(toAbbr(word)) || abbrMap.get(toAbbr(word)).equals(word);
    }
    
    private String toAbbr(String str) {
        if (str.length() <= 2) {
            return str;
        }
        
        StringBuilder sb = new StringBuilder();
        sb.append(str.charAt(0));
        sb.append(str.length() - 2);
        sb.append(str.charAt(str.length() - 1));
        return sb.toString();
    }
}


// Your ValidWordAbbr object will be instantiated and called as such:
// ValidWordAbbr vwa = new ValidWordAbbr(dictionary);
// vwa.isUnique("Word");
// vwa.isUnique("anotherWord");
